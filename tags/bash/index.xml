<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bash on MyNotes</title><link>https://yangyingchao.github.io/tags/bash/</link><description>Recent content in bash on MyNotes</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 13 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyingchao.github.io/tags/bash/index.xml" rel="self" type="application/rss+xml"/><item><title>Advanced Shell Scripting Techniques: Automating Complex Tasks with Bash</title><link>https://yangyingchao.github.io/posts/omid_dev_advanced-shell-scripting-techniques-automating-complex-tasks-with-bash/</link><pubDate>Fri, 13 Sep 2024 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/omid_dev_advanced-shell-scripting-techniques-automating-complex-tasks-with-bash/</guid><description>1 脚本优化 1.1 使用内置命令 1.2 减少子 shell 使用 1.3 使用数组处理大量数据# 1.4 Enable Noclobber# 1.5 使用函数# 1.6 高效的文件操作# 1.7 并行处理# 2 错误处理# 2.1 当发生错误时立即</description></item><item><title>Bash Mapfile Builtin Command Help and Examples</title><link>https://yangyingchao.github.io/posts/mapfile/</link><pubDate>Thu, 19 Oct 2023 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/mapfile/</guid><description>1 语法 1.1 选项 1.2 注意事项 1.3 退出状态 2 示例 2.1 使用进程替换 (process substitution) 的 mapfile 3 Process substitution 本文为摘录，原文为： https://www.computerhope.com/unix/bash/mapfile.htm 1 语法 mapfile [-n count] [-O origin] [-s count] [-t] [-u fd] [-C callback [-c quantum]] [array] 1.1 选项 mapfile 内建命令</description></item><item><title>google shell style guide | Style guides for Google-originated open-source projects</title><link>https://yangyingchao.github.io/posts/shellguide/</link><pubDate>Thu, 17 Aug 2023 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/shellguide/</guid><description>1 Background 2 Shell Files and Interpreter Invocation 2.1 File Extensions 2.2 SUID/SGID 3 Environment 3.1 STDOUT vs STDERR 4 Comments 4.1 File Header 4.2 Function Comments 4.3 Implementation Comments 4.4 TODO Comments 5 Formatting 5.1 Indentation 5.2 Line Length and Long Strings 5.3 Pipelines 5.4 Loops 5.5 Case statement 5.6 Variable expansion 5.7 Quoting 6 Features and Bugs 6.1 ShellCheck 6.2 Command Substitution 6.3 Test, [ … ], and</description></item><item><title>Tips of Bash/Zsh</title><link>https://yangyingchao.github.io/posts/tips-of-bash-zsh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/tips-of-bash-zsh/</guid><description>1 展开 Bash 数组 (array) 时候， ${ARRARY[@]} 和 ${ARRARY[*]} 有什么区别？ 2 How do you escape characters in heredoc? 2.1 Question 2.2 Answer 3 special expansion: 4 will .bash_profile be sourced when executing scripts? 本文为摘录，原文为： https://unix.stackexchange.com/questions/505949/expanding-only-certain-variables-inside-a-heredoc 1 展开 Bash 数组 (array) 时候， ${ARRARY[@]} 和 ${ARRARY[*]} 有什么区</description></item></channel></rss>