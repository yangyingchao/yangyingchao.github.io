<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Bash - 标签 - 老杨的杂货铺</title><link>https://yangyingchao.github.io/tags/bash/</link><description>Bash - 标签 - 老杨的杂货铺</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 13 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyingchao.github.io/tags/bash/" rel="self" type="application/rss+xml"/><item><title>Advanced Shell Scripting Techniques: Automating Complex Tasks with Bash</title><link>https://yangyingchao.github.io/omid_dev_advanced-shell-scripting-techniques-automating-complex-tasks-with-bash/</link><pubDate>Fri, 13 Sep 2024 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/omid_dev_advanced-shell-scripting-techniques-automating-complex-tasks-with-bash/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#%e8%84%9a%e6%9c%ac%e4%bc%98%e5%8c%96" rel="">脚本优化</a>
<ul>
<li><span class="section-num">1.1</span> <a href="#%e4%bd%bf%e7%94%a8%e5%86%85%e7%bd%ae%e5%91%bd%e4%bb%a4" rel="">使用内置命令</a></li>
<li><span class="section-num">1.2</span> <a href="#%e5%87%8f%e5%b0%91%e5%ad%90-shell-%e4%bd%bf%e7%94%a8" rel="">减少子 shell 使用</a></li>
<li><span class="section-num">1.3</span> <a href="#%e4%bd%bf%e7%94%a8%e6%95%b0%e7%bb%84%e5%a4%84%e7%90%86%e5%a4%a7%e9%87%8f%e6%95%b0%e6%8d%ae" rel="">使用数组处理大量数据#</a></li>
<li><span class="section-num">1.4</span> <a href="#enable-noclobber" rel="">Enable Noclobber#</a></li>
<li><span class="section-num">1.5</span> <a href="#%e4%bd%bf%e7%94%a8%e5%87%bd%e6%95%b0" rel="">使用函数#</a></li>
<li><span class="section-num">1.6</span> <a href="#%e9%ab%98%e6%95%88%e7%9a%84%e6%96%87%e4%bb%b6%e6%93%8d%e4%bd%9c" rel="">高效的文件操作#</a></li>
<li><span class="section-num">1.7</span> <a href="#%e5%b9%b6%e8%a1%8c%e5%a4%84%e7%90%86" rel="">并行处理#</a></li>
</ul>
</li>
<li><span class="section-num">2</span> <a href="#%e9%94%99%e8%af%af%e5%a4%84%e7%90%86" rel="">错误处理#</a>
<ul>
<li><span class="section-num">2.1</span> <a href="#%e5%bd%93%e5%8f%91%e7%94%9f%e9%94%99%e8%af%af%e6%97%b6%e7%ab%8b%e5%8d%b3%e9%80%80%e5%87%ba" rel="">当发生错误时立即退出#</a></li>
<li><span class="section-num">2.2</span> <a href="#%e8%87%aa%e5%ae%9a%e4%b9%89%e9%94%99%e8%af%af%e6%b6%88%e6%81%af" rel="">自定义错误消息#</a></li>
<li><span class="section-num">2.3</span> <a href="#%e6%8d%95%e8%8e%b7%e4%bf%a1%e5%8f%b7" rel="">捕获信号#</a></li>
<li><span class="section-num">2.4</span> <a href="#%e9%aa%8c%e8%af%81%e8%be%93%e5%85%a5" rel="">验证输入#</a></li>
<li><span class="section-num">2.5</span> <a href="#%e8%ae%b0%e5%bd%95%e6%97%a5%e5%bf%97" rel="">记录日志#</a></li>
</ul>
</li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录，原文为： <a href="https://omid.dev/2024/06/19/advanced-shell-scripting-techniques-automating-complex-tasks-with-bash/" target="_blank" rel="noopener noreffer ">https://omid.dev/2024/06/19/advanced-shell-scripting-techniques-automating-complex-tasks-with-bash/</a></p>
<h2 id="脚本优化"><span class="section-num">1</span> 脚本优化</h2>
<p>优化对于确保脚本高效运行至关重要，特别是在处理大型数据集或密集任务时。以下是一些优化 Bash 脚本的关键技巧。</p>]]></description></item><item><title>Bash Mapfile Builtin Command Help and Examples</title><link>https://yangyingchao.github.io/mapfile/</link><pubDate>Thu, 19 Oct 2023 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/mapfile/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#h:11d958d0-32e8-40f0-8b56-88270fd85ed4" rel="">语法</a>
<ul>
<li><span class="section-num">1.1</span> <a href="#h:7ebb0f59-ff05-4de9-9346-346ac68e6cff" rel="">选项</a></li>
<li><span class="section-num">1.2</span> <a href="#h:1ce845c9-394e-41af-a4a7-b280e219050c" rel="">注意事项</a></li>
<li><span class="section-num">1.3</span> <a href="#h:cc5aa7f0-644e-44cf-ba26-4c8948cde1ec" rel="">退出状态</a></li>
</ul>
</li>
<li><span class="section-num">2</span> <a href="#h:dcb6eedc-6f65-46fb-9ff8-758618b0cbb1" rel="">示例</a>
<ul>
<li><span class="section-num">2.1</span> <a href="#h:57b46aaf-3ca8-41dd-b037-b8dc76e09397" rel="">使用进程替换 (process substitution) 的 mapfile</a></li>
</ul>
</li>
<li><span class="section-num">3</span> <a href="#h:09d65bb0-ed38-465f-95dd-da3cd65308a2" rel="">Process substitution</a></li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录，原文为： <a href="https://www.computerhope.com/unix/bash/mapfile.htm" target="_blank" rel="noopener noreffer ">https://www.computerhope.com/unix/bash/mapfile.htm</a></p>
<h2 id="h:11d958d0-32e8-40f0-8b56-88270fd85ed4"><span class="section-num">1</span> 语法</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">mapfile [-n count] [-O origin] [-s count] [-t] [-u fd]
</span></span><span class="line"><span class="cl">        [-C callback [-c quantum]] [array]
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="h:7ebb0f59-ff05-4de9-9346-346ac68e6cff"><span class="section-num">1.1</span> 选项</h3>
<p>mapfile 内建命令接受以下选项：</p>
<ul>
<li><code>-n count</code>  读取最多 count 行。如果 count 为零，则复制所有可用的行。</li>
<li><code>-O origin</code> 从索引号 origin 开始将行写入数组 array。默认值为零。</li>
<li><code>-s count</code>  在写入数组之前丢弃 count 行。</li>
<li><code>-t</code>  如果任何行以换行符结尾，则去除换行符。</li>
<li><code>-u fd</code>  从文件描述符 fd 读取行，而不是标准输入。</li>
<li><code>-C callback</code>  每次读取量子行时执行/评估一个函数/表达式 callback。默认量子值为 1，除非使用-c 另行指定。</li>
<li><code>-c quantum</code>  指定函数/表达式 callback 在指定了-C 时执行/评估的行数量子。</li>
<li><code>array</code>  要写入行的数组变量的名称。如果省略了 array，则默认变量 MAPFILE 是目标。</li>
</ul>
<h3 id="h:1ce845c9-394e-41af-a4a7-b280e219050c"><span class="section-num">1.2</span> 注意事项</h3>
<ul>
<li>命令名称 readarray 可以作为命令名称 mapfile 的别名使用，其操作没有任何差异。</li>
<li>如果指定了-u 选项，mapfile 将从文件描述符 fd 而不是标准输入中读取。</li>
<li>如果未指定 array，则默认变量 MAPFILE 将用作目标数组变量。</li>
</ul>
<p>mapfile 命令不是非常可移植的。也就是说，如果你希望确保脚本可以在多种系统上运行，不建议使
用 mapfile。它主要提供方便。相同的功能可以使用 read 循环实现，尽管通常 mapfile 的性能更好。</p>]]></description></item><item><title>google shell style guide | Style guides for Google-originated open-source projects</title><link>https://yangyingchao.github.io/shellguide/</link><pubDate>Thu, 17 Aug 2023 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/shellguide/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#h:f6a55800-10d4-4052-be0f-f0d7053dd7b6" rel="">Background</a></li>
<li><span class="section-num">2</span> <a href="#h:be0de52e-c0fc-43e7-b1f8-d99e128cef75" rel="">Shell Files and Interpreter Invocation</a>
<ul>
<li><span class="section-num">2.1</span> <a href="#h:f9b70299-d7f6-431d-a77d-2bb400685496" rel="">File Extensions</a></li>
<li><span class="section-num">2.2</span> <a href="#h:7eb24edb-2c24-4fea-b278-6aa152751b06" rel="">SUID/SGID</a></li>
</ul>
</li>
<li><span class="section-num">3</span> <a href="#h:fa963b24-5dd3-4380-ae40-710090f14e29" rel="">Environment</a>
<ul>
<li><span class="section-num">3.1</span> <a href="#h:90556c60-d3cd-465b-91c8-1e635abfee5f" rel="">STDOUT vs STDERR</a></li>
</ul>
</li>
<li><span class="section-num">4</span> <a href="#h:e774be8f-ca5b-4520-a57f-c799f69b7675" rel="">Comments</a>
<ul>
<li><span class="section-num">4.1</span> <a href="#h:24294cf2-94e9-4f88-9afe-a56220843c64" rel="">File Header</a></li>
<li><span class="section-num">4.2</span> <a href="#h:43e7e163-58c6-4932-b309-95390eea923d" rel="">Function Comments</a></li>
<li><span class="section-num">4.3</span> <a href="#h:4b9e0968-747e-4428-a718-7e54939feffd" rel="">Implementation Comments</a></li>
<li><span class="section-num">4.4</span> <a href="#h:9a26a2da-3497-46f0-a3e1-1bc5739749e4" rel=""><span class="org-todo todo TODO">TODO</span> Comments</a></li>
</ul>
</li>
<li><span class="section-num">5</span> <a href="#h:fa0aab5f-0167-4fa5-a463-ea5b965ac727" rel="">Formatting</a>
<ul>
<li><span class="section-num">5.1</span> <a href="#h:033bfebd-8148-4e37-bdb7-f1242f62d7a7" rel="">Indentation</a></li>
<li><span class="section-num">5.2</span> <a href="#h:098c6c3a-4ae7-40bb-b75c-e37a811e28d7" rel="">Line Length and Long Strings</a></li>
<li><span class="section-num">5.3</span> <a href="#h:dcbc1b2e-9cf4-48fe-a706-7f3a39386d32" rel="">Pipelines</a></li>
<li><span class="section-num">5.4</span> <a href="#h:d5df6dad-79a8-4531-af28-a3e4a797d193" rel="">Loops</a></li>
<li><span class="section-num">5.5</span> <a href="#h:033449c1-3dc3-4148-9de3-099eb0e1f366" rel="">Case statement</a></li>
<li><span class="section-num">5.6</span> <a href="#h:ee435b39-dad7-4604-a699-738299997086" rel="">Variable expansion</a></li>
<li><span class="section-num">5.7</span> <a href="#h:59bf8094-699c-4c8b-ae73-65616213a707" rel="">Quoting</a></li>
</ul>
</li>
<li><span class="section-num">6</span> <a href="#h:f07ebca3-d96a-4b10-8f24-043ef9cfec52" rel="">Features and Bugs</a>
<ul>
<li><span class="section-num">6.1</span> <a href="#h:8c4ba5f5-2f9e-41df-8f4d-1d1f7c143b71" rel="">ShellCheck</a></li>
<li><span class="section-num">6.2</span> <a href="#h:39f77101-8b9e-48d3-8378-b9286c796412" rel="">Command Substitution</a></li>
<li><span class="section-num">6.3</span> <a href="#h:2cf87600-2f6d-48c2-be83-78bcd604e5da" rel="">Test, <code>[ … ]</code>, and <code>\[\[ … \]\]</code></a></li>
<li><span class="section-num">6.4</span> <a href="#h:35d9e289-38dc-42e3-a41c-6de70e4d8404" rel="">Testing Strings</a></li>
<li><span class="section-num">6.5</span> <a href="#h:64dfe8cd-4826-44a0-aba3-7eb35ce48f26" rel="">Wildcard Expansion of Filenames</a></li>
<li><span class="section-num">6.6</span> <a href="#h:32bb0195-e72a-4225-90ad-7117fde8d0a2" rel="">Eval</a></li>
<li><span class="section-num">6.7</span> <a href="#h:2dd03710-f58f-42a5-9a44-e8018bfc560d" rel="">Arrays</a></li>
<li><span class="section-num">6.8</span> <a href="#h:02047bfd-a8ec-4485-9930-17d1182370a5" rel="">Pipes to While</a></li>
<li><span class="section-num">6.9</span> <a href="#h:2aa69bf1-223e-4c9d-902a-c195f99571a7" rel="">Arithmetic</a></li>
</ul>
</li>
<li><span class="section-num">7</span> <a href="#h:f05a3c9b-4803-4daf-9f8e-a308ec4cdd7e" rel="">Naming Conventions</a>
<ul>
<li><span class="section-num">7.1</span> <a href="#h:bb847e7f-6e4d-42ef-9dbe-f21d51289ce3" rel="">Function Names</a></li>
<li><span class="section-num">7.2</span> <a href="#h:50d9a19c-c3c1-4f69-9933-5f6d4d4649b0" rel="">Variable Names</a></li>
<li><span class="section-num">7.3</span> <a href="#h:58b0b2a6-375f-4a97-804d-ad2fea2ee103" rel="">Constants and Environment Variable Names</a></li>
<li><span class="section-num">7.4</span> <a href="#h:888f6100-39cf-4d9a-b38b-75cf38526704" rel="">Source Filenames</a></li>
<li><span class="section-num">7.5</span> <a href="#h:051bf4c0-5a94-4a7a-96c0-72c4c18e3547" rel="">Read-only Variables</a></li>
<li><span class="section-num">7.6</span> <a href="#h:31bbd098-0f2e-46fd-83f5-c249dc69e0a1" rel="">Use Local Variables</a></li>
<li><span class="section-num">7.7</span> <a href="#h:24a30647-7c4c-491f-b703-bbf46125092d" rel="">Function Location</a></li>
<li><span class="section-num">7.8</span> <a href="#h:798b0a69-eb83-48ff-bcf3-a1860767c727" rel="">main</a></li>
</ul>
</li>
<li><span class="section-num">8</span> <a href="#h:04e85d27-2e7a-4bbd-bec6-5ff094ed706f" rel="">Calling Commands</a>
<ul>
<li><span class="section-num">8.1</span> <a href="#h:2a0c36d5-95f1-4aae-9b18-2f44a9d992c4" rel="">Checking Return Values</a></li>
<li><span class="section-num">8.2</span> <a href="#h:eca45d0b-79dd-4e82-a638-bf072f336d79" rel="">Builtin Commands vs. External Commands</a></li>
</ul>
</li>
<li><span class="section-num">9</span> <a href="#h:36111ffd-58b2-49b6-85f0-8c0f3cfe80f4" rel="">Conclusion</a></li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录，原文为： <a href="https://google.github.io/styleguide/shellguide.html" target="_blank" rel="noopener noreffer ">https://google.github.io/styleguide/shellguide.html</a></p>]]></description></item><item><title>Tips of Bash/Zsh</title><link>https://yangyingchao.github.io/tips-of-bash-zsh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/tips-of-bash-zsh/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#h:c2349cd1-7eb4-4ae1-9eea-323aea44ee72" rel="">展开 Bash 数组 (array) 时候， <code>${ARRARY[@]}</code> 和 <code>${ARRARY[*]}</code> 有什么区别？</a></li>
<li><span class="section-num">2</span> <a href="#h:f4db2d27-d344-47c3-b020-b392cc7b33d6" rel="">How do you escape characters in heredoc?</a>
<ul>
<li><span class="section-num">2.1</span> <a href="#h:289ce225-b573-4798-89f3-4946fe49b3bb" rel="">Question</a></li>
<li><span class="section-num">2.2</span> <a href="#h:8389b13e-5ee7-4338-9e6b-4726d406d481" rel="">Answer</a></li>
</ul>
</li>
<li><span class="section-num">3</span> <a href="#h:e6d62956-9ea2-45cb-805a-200499519c7c" rel="">special expansion:</a></li>
<li><span class="section-num">4</span> <a href="#h:6ddc502c-c88b-4d32-9b95-10e2c0d4e77e" rel="">will .bash_profile be sourced when executing scripts?</a></li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录，原文为： <a href="https://unix.stackexchange.com/questions/505949/expanding-only-certain-variables-inside-a-heredoc" target="_blank" rel="noopener noreffer ">https://unix.stackexchange.com/questions/505949/expanding-only-certain-variables-inside-a-heredoc</a></p>
<h2 id="h:c2349cd1-7eb4-4ae1-9eea-323aea44ee72"><span class="section-num">1</span> 展开 Bash 数组 (array) 时候， <code>${ARRARY[@]}</code> 和 <code>${ARRARY[*]}</code> 有什么区别？</h2>
<p>INFO 中有相关说明：</p>]]></description></item></channel></rss>