<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Convert on 杂货铺</title><link>https://yangyingchao.github.io/tags/convert/</link><description>Recent content in Convert on 杂货铺</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 14 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyingchao.github.io/tags/convert/index.xml" rel="self" type="application/rss+xml"/><item><title>C++ String Conversion: Exploring std::from_chars in C++17 to C++26</title><link>https://yangyingchao.github.io/www_cppstories_com_fromchars/</link><pubDate>Mon, 14 Oct 2024 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/www_cppstories_com_fromchars/</guid><description>&lt;div class="ox-hugo-toc toc has-section-numbers"&gt;
&lt;div class="heading"&gt;Table of Contents&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="section-num"&gt;1&lt;/span&gt; &lt;a href="#before-c-plus-plus-17" rel=""&gt;Before C++17&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="section-num"&gt;2&lt;/span&gt; &lt;a href="#converting-from-characters-to-numbers-from-chars" rel=""&gt;Converting From Characters to Numbers: from_chars&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="section-num"&gt;2.1&lt;/span&gt; &lt;a href="#%e7%a4%ba%e4%be%8b" rel=""&gt;示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class="section-num"&gt;3&lt;/span&gt; &lt;a href="#%e6%80%a7%e8%83%bd" rel=""&gt;性能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="section-num"&gt;4&lt;/span&gt; &lt;a href="#c-plus-plus-23-%e6%9b%b4%e6%96%b0" rel=""&gt;C++23 更新&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="section-num"&gt;5&lt;/span&gt; &lt;a href="#c-plus-plus-26-%e6%9b%b4%e6%96%b0" rel=""&gt;C++26 更新&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="section-num"&gt;6&lt;/span&gt; &lt;a href="#c-plus-plus-%e4%b8%ad%e5%af%b9-std-from-chars-%e7%9a%84%e7%bc%96%e8%af%91%e5%99%a8%e6%94%af%e6%8c%81" rel=""&gt;C++ 中对 std::from_chars 的编译器支持&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="section-num"&gt;7&lt;/span&gt; &lt;a href="#%e6%80%bb%e7%bb%93" rel=""&gt;总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!--endtoc--&gt;
&lt;p&gt;本文为摘录(或转载)，侵删，原文为： &lt;a href="https://www.cppstories.com/2018/12/fromchars/" target="_blank" rel="noopener noreffer "&gt;https://www.cppstories.com/2018/12/fromchars/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;随着引入 C++17，C++标准库通过添加 &lt;code&gt;std::from_chars&lt;/code&gt; 来扩展了将文本转换为数字的功能。这个低级、高性能的 API 相较于以前的方法（如 atoi 和 stringstream）提供了显著的优势。在本文中，我们将探讨从 C++17 到 C++26 的字符串转换程序的演变，重点突出了诸如 constexpr 支持和改进的错误处理等关键改进。让我们深入了解细节，看看 &lt;code&gt;std::from_chars&lt;/code&gt; 如何可以改变您对字符串转换的方法。&lt;/p&gt;</description></item></channel></rss>