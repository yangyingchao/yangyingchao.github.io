<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>join on MyNotes</title><link>https://yangyingchao.github.io/tags/join/</link><description>Recent content in join on MyNotes</description><generator>Hugo -- 0.115.0</generator><language>zh-cn</language><lastBuildDate>Fri, 03 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyingchao.github.io/tags/join/index.xml" rel="self" type="application/rss+xml"/><item><title>数据库 - StarRocks 技术内幕 | Join 查询优化</title><link>https://yangyingchao.github.io/posts/segmentfault_com_a_1190000042739883/</link><pubDate>Fri, 03 Jan 2025 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/segmentfault_com_a_1190000042739883/</guid><description>1 Join 背景 2 Join 逻辑优化 3 Join Reorder 4 分布式 Join 规划 5 总结 本文为摘录，原文为： https://segmentfault.com/a/1190000042739883 作者：贺凯，StarRocks Committer 导读：欢迎来到 StarRocks 技术内幕系列文章，我们将</description></item><item><title>Making RDBMSs Efficient on Graph Workloads Through Predefined Joins</title><link>https://yangyingchao.github.io/posts/p1011-jin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/p1011-jin/</guid><description>1 ABSTRACT 本文为摘录，原文为： attachments/pdf/4/p1011-jin.pdf 1 ABSTRACT</description></item></channel></rss>