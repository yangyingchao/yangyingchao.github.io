<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on 杂七杂八随手记</title><link>https://yangyingchao.github.io/tags/linux/</link><description>Recent content in linux on 杂七杂八随手记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 23 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyingchao.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>UNIX vs Linux: What's the Difference?</title><link>https://yangyingchao.github.io/posts/unix-vs-linux-what-is-the-difference/</link><pubDate>Wed, 23 Aug 2023 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/unix-vs-linux-what-is-the-difference/</guid><description>Table of Contents 1 Historical Context 2 Licensing and Distribution 3 Kernel and System Architecture 4 Community and Development 5 Customization and Flexibility 6 User Interface 7 Market Share and Industry Application 8 Security and Stability 9 Conclusion 在复杂多变的操作系统领域里，UNIX 和 Linux 这两个显赫的巨头已经塑造</description></item><item><title>Coping with the TCP TIME-WAIT state on busy Linux servers</title><link>https://yangyingchao.github.io/posts/coping-with-the-tcp-time-wait-state-on-busy-linux-servers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/coping-with-the-tcp-time-wait-state-on-busy-linux-servers/</guid><description>Table of Contents 1 TL;DR 2 About the TIME-WAIT state 2.1 TCP state diagram 2.2 Purpose 3 Problems 4 Other solutions 4.1 net.ipv4.tcp_tw_reuse 5 Another 6 总结 1 TL;DR 不用启用 net.ipv4.tcp_tw_recycle ， 该选项已在 Linux4.12 废弃 多数情况下， TIME-WAIT 状态的 socket 无害 2 About the TIME-WAIT state 2.1 TCP state diagram http://tcpipguide.com/free/t_TCPOperationalOverviewandtheTCPFiniteStateMachineF-2.htm 只有主</description></item><item><title>Linux Process States</title><link>https://yangyingchao.github.io/posts/linux-process-states-baeldung-on-linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/linux-process-states-baeldung-on-linux/</guid><description>Table of Contents 1 The Linux Process States 1.1 Running or Runnable State (R) 1.2 Sleeping State: Interruptible (S) and Uninterruptible (D) 1.3 Stopped State (T) 1.4 Zombie State (Z) 2 Checking Process State 2.1 Displaying Process State Using ps 2.2 Using the top Command 2.3 The /proc Pseudo File 3 Summary 1 The Linux Process States Running or Runnable (R) Uninterruptible Sleep (D) Interruptable Sleep (S) Stopped (T) Zombie</description></item></channel></rss>