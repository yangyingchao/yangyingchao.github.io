<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on MyNotes</title><link>https://yangyingchao.github.io/tags/linux/</link><description>Recent content in linux on MyNotes</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 21 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyingchao.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux Rootkits — Multiple ways to hook syscall(s)</title><link>https://yangyingchao.github.io/posts/linux-rootkits-multiple-ways-to-hook-syscall-s-7001cc02a1e6/</link><pubDate>Thu, 21 Sep 2023 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/linux-rootkits-multiple-ways-to-hook-syscall-s-7001cc02a1e6/</guid><description>1 Syscall Table hijacking — The good old way, 系统调用表劫持 2 sys_close — The brute force method 3 VFS hooking 4 The ftrace helper method 本文为摘录，原文为： https://foxtrot-sq.medium.com/linux-rootkits-multiple-ways-to-hook-syscall-s-7001cc02a1e6 我们所见到的大多数恶意软件攻击中使用的 rootkit 都是开源的，其行</description></item><item><title>How to Terminate Stuck or Unwanted User Sessions in Linux</title><link>https://yangyingchao.github.io/posts/how-to-terminate-stuck-or-unwanted-user-sessions-in-linux/</link><pubDate>Fri, 08 Sep 2023 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/how-to-terminate-stuck-or-unwanted-user-sessions-in-linux/</guid><description>1 Linux 中的 TTY 和 PTS 是什么？ 2 如何在 Linux 中终止被卡住/不需要的用户会话 2.1 Terminate User Session by TTY 2.2 按进程 ID 终止用户会话 2.3 Conclusion 本文为摘录，原文为： https://linuxiac.com/how-to-terminate-user-session-in-linux/ 1 Linux 中的 TTY 和 PTS 是什</description></item><item><title>Ways to Deal With a Frozen Linux System</title><link>https://yangyingchao.github.io/posts/frozen-linux-system/</link><pubDate>Mon, 28 Aug 2023 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/frozen-linux-system/</guid><description>1 When everything else fails, talk with the Kernel using SysReq 本文为摘录，原文为： https://linuxhandbook.com/frozen-linux-system/ 1 When everything else fails, talk with the Kernel using SysReq 链接到标题 有时，甚至切换到 TTY 也无法正常工作。整个系统都死了。但是不要放弃，</description></item><item><title>UNIX vs Linux: What's the Difference?</title><link>https://yangyingchao.github.io/posts/unix-vs-linux-what-is-the-difference/</link><pubDate>Wed, 23 Aug 2023 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/unix-vs-linux-what-is-the-difference/</guid><description>1 Historical Context 2 Licensing and Distribution 3 Kernel and System Architecture 4 Community and Development 5 Customization and Flexibility 6 User Interface 7 Market Share and Industry Application 8 Security and Stability 9 Conclusion 本文为摘录，原文为： https://www.linuxjournal.com/content/unix-vs-linux-what-is-the-difference 在复杂多变的操作系统领域里，UNIX 和 Linux 这两个显</description></item><item><title>Coping with the TCP TIME-WAIT state on busy Linux servers</title><link>https://yangyingchao.github.io/posts/coping-with-the-tcp-time-wait-state-on-busy-linux-servers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/coping-with-the-tcp-time-wait-state-on-busy-linux-servers/</guid><description>1 TL;DR 2 About the TIME-WAIT state 2.1 TCP state diagram 2.2 Purpose 3 Problems 4 Other solutions 4.1 net.ipv4.tcp_tw_reuse 5 Another 6 总结 本文为摘录，原文为： https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary 1 TL;DR 链接到标题 不用启用 net.ipv4.tcp_tw_recycle ， 该选项已在 Linux4.12 废弃 多数情况下， TIME-WAIT 状态的 socket 无害</description></item><item><title>Linux Process States</title><link>https://yangyingchao.github.io/posts/linux-process-states-baeldung-on-linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/linux-process-states-baeldung-on-linux/</guid><description>1 The Linux Process States 1.1 Running or Runnable State (R) 1.2 Sleeping State: Interruptible (S) and Uninterruptible (D) 1.3 Stopped State (T) 1.4 Zombie State (Z) 2 Checking Process State 2.1 Displaying Process State Using ps 2.2 Using the top Command 2.3 The /proc Pseudo File 3 Summary 本文为摘录，原文为： https://www.baeldung.com/linux/process-states 1 The Linux Process States 链接到标题</description></item></channel></rss>