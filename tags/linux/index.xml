<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Linux - 标签 - 老杨的杂货铺</title><link>https://yangyingchao.github.io/tags/linux/</link><description>Linux - 标签 - 老杨的杂货铺</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 21 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyingchao.github.io/tags/linux/" rel="self" type="application/rss+xml"/><item><title>Linux Rootkits — Multiple ways to hook syscall(s)</title><link>https://yangyingchao.github.io/linux-rootkits-multiple-ways-to-hook-syscall-s-7001cc02a1e6/</link><pubDate>Thu, 21 Sep 2023 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/linux-rootkits-multiple-ways-to-hook-syscall-s-7001cc02a1e6/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#h:98e4d628-ec24-45db-b9b1-fff7eba4a0af" rel="">Syscall Table hijacking — The good old way, 系统调用表劫持</a></li>
<li><span class="section-num">2</span> <a href="#h:45798689-8b14-43ec-8000-bbecea4d896c" rel="">sys_close — The brute force method</a></li>
<li><span class="section-num">3</span> <a href="#h:889b5097-0190-4799-a9c6-5cb7d50ad082" rel="">VFS hooking</a></li>
<li><span class="section-num">4</span> <a href="#h:ccc260a9-1238-4340-9ad4-0bd94a9a1d1e" rel="">The ftrace helper method</a></li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录(或转载)，侵删，原文为： <a href="https://foxtrot-sq.medium.com/linux-rootkits-multiple-ways-to-hook-syscall-s-7001cc02a1e6" target="_blank" rel="noopener noreffer ">https://foxtrot-sq.medium.com/linux-rootkits-multiple-ways-to-hook-syscall-s-7001cc02a1e6</a></p>
<p>我们所见到的大多数恶意软件攻击中使用的 rootkit 都是开源的，其行为几乎与在系统中运行的正常进程相同（隐藏和挂钩）。从行为上来看，它们与正常进程几乎没有任何区别。在本文中，我们将探讨一些现有的方法，根据不同的 Linux 内核版本来挂钩系统调用。</p>]]></description></item><item><title>How to Terminate Stuck or Unwanted User Sessions in Linux</title><link>https://yangyingchao.github.io/how-to-terminate-stuck-or-unwanted-user-sessions-in-linux/</link><pubDate>Fri, 08 Sep 2023 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/how-to-terminate-stuck-or-unwanted-user-sessions-in-linux/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#h:630c60b8-137a-4521-84fd-8c01eb6c2e48" rel="">Linux 中的 TTY 和 PTS 是什么？</a></li>
<li><span class="section-num">2</span> <a href="#h:78ab4e18-5d26-4a48-84a3-7d3129debc4e" rel="">如何在 Linux 中终止被卡住/不需要的用户会话</a>
<ul>
<li><span class="section-num">2.1</span> <a href="#h:ef209893-46c7-448a-90a8-8eeffeb11171" rel="">Terminate User Session by TTY</a></li>
<li><span class="section-num">2.2</span> <a href="#h:fb2a4d0e-261f-43d3-b207-b366e4f2d4e2" rel="">按进程 ID 终止用户会话</a></li>
<li><span class="section-num">2.3</span> <a href="#h:d7fd8a22-d7ec-4841-9ae7-54f2f7892626" rel="">Conclusion</a></li>
</ul>
</li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录(或转载)，侵删，原文为： <a href="https://linuxiac.com/how-to-terminate-user-session-in-linux/" target="_blank" rel="noopener noreffer ">https://linuxiac.com/how-to-terminate-user-session-in-linux/</a></p>
<h2 id="h:630c60b8-137a-4521-84fd-8c01eb6c2e48"><span class="section-num">1</span> Linux 中的 TTY 和 PTS 是什么？</h2>
<p>在 Linux 中，&ldquo;PTS&quot;和&quot;TTY&quot;都指不同的终端设备，用于用户与操作系统之间的通信。它们作为输入命令和从系统接收输出的接口。</p>]]></description></item><item><title>Ways to Deal With a Frozen Linux System</title><link>https://yangyingchao.github.io/frozen-linux-system/</link><pubDate>Mon, 28 Aug 2023 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/frozen-linux-system/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#h:660feb15-1dc5-4890-a586-8f6445c1a928" rel="">When everything else fails, talk with the Kernel using SysReq</a></li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录(或转载)，侵删，原文为： <a href="https://linuxhandbook.com/frozen-linux-system/" target="_blank" rel="noopener noreffer ">https://linuxhandbook.com/frozen-linux-system/</a></p>
<h2 id="h:660feb15-1dc5-4890-a586-8f6445c1a928"><span class="section-num">1</span> When everything else fails, talk with the Kernel using SysReq</h2>
<p>有时，甚至切换到 TTY 也无法正常工作。整个系统都死了。但是不要放弃，很可能是一种假象。Linux 在这种情况下提供了一种更多的功能。</p>]]></description></item><item><title>UNIX vs Linux: What's the Difference?</title><link>https://yangyingchao.github.io/unix-vs-linux-what-is-the-difference/</link><pubDate>Wed, 23 Aug 2023 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/unix-vs-linux-what-is-the-difference/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#h:96bcfbdc-a176-46f0-8ef4-f896231011df" rel="">Historical Context</a></li>
<li><span class="section-num">2</span> <a href="#h:b88361c2-1e1d-41ea-8db2-385848fe3b07" rel="">Licensing and Distribution</a></li>
<li><span class="section-num">3</span> <a href="#h:d5b11cf5-af8b-44c4-be05-5f429b7e5add" rel="">Kernel and System Architecture</a></li>
<li><span class="section-num">4</span> <a href="#h:8277c50e-efce-4969-b1f5-710aba15b454" rel="">Community and Development</a></li>
<li><span class="section-num">5</span> <a href="#h:e598928c-ec79-4065-a6a4-a127e374aa94" rel="">Customization and Flexibility</a></li>
<li><span class="section-num">6</span> <a href="#h:fdc8a361-b8e2-43d2-bcd1-996f9187ac25" rel="">User Interface</a></li>
<li><span class="section-num">7</span> <a href="#h:2d40a1f8-35bb-4873-bacd-84d517da8458" rel="">Market Share and Industry Application</a></li>
<li><span class="section-num">8</span> <a href="#h:650684d8-0cd6-4be4-a77a-3cc97b85fc40" rel="">Security and Stability</a></li>
<li><span class="section-num">9</span> <a href="#h:50d558df-80f3-42a0-8dda-954fd9071ee9" rel="">Conclusion</a></li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录(或转载)，侵删，原文为： <a href="https://www.linuxjournal.com/content/unix-vs-linux-what-is-the-difference" target="_blank" rel="noopener noreffer ">https://www.linuxjournal.com/content/unix-vs-linux-what-is-the-difference</a></p>
<p>在复杂多变的操作系统领域里，UNIX 和 Linux 这两个显赫的巨头已经塑造了数字领域数十年。尽管这两个系统乍一看起来很相似，但深入分析后会发现它们存在根本性的区别，这些区别对开发人员、管理员和用户都有着重要的影响。在本文中，我们将踏上一段旅程，揭示 UNIX 和 Linux 之间的微妙差异，阐明它们的历史起源、许可模式、系统架构、社区、用户界面、市场应用、安全范式等方面的情况。</p>]]></description></item><item><title>Coping with the TCP TIME-WAIT state on busy Linux servers</title><link>https://yangyingchao.github.io/coping-with-the-tcp-time-wait-state-on-busy-linux-servers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/coping-with-the-tcp-time-wait-state-on-busy-linux-servers/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#h:871f360d-063e-46ff-9c0a-18322d91be4c" rel="">TL;DR</a></li>
<li><span class="section-num">2</span> <a href="#h:096c1a95-20d2-4ac1-b6f2-fac0a6b2e233" rel="">About the TIME-WAIT state</a>
<ul>
<li><span class="section-num">2.1</span> <a href="#h:0a4a593c-1032-4cbd-bb0d-89c43f6348c0" rel="">TCP state diagram</a></li>
<li><span class="section-num">2.2</span> <a href="#h:761d930e-9258-42e1-8792-75aafd6a4642" rel="">Purpose</a></li>
</ul>
</li>
<li><span class="section-num">3</span> <a href="#h:90387b11-15a7-43e6-9d48-031298e3c45a" rel="">Problems</a></li>
<li><span class="section-num">4</span> <a href="#h:fe22875f-822e-470b-a2cf-8ca13e804920" rel="">Other solutions</a>
<ul>
<li><span class="section-num">4.1</span> <a href="#h:27aabe51-3f44-40ac-a21e-f9de9dbb9254" rel="">net.ipv4.tcp_tw_reuse</a></li>
</ul>
</li>
<li><span class="section-num">5</span> <a href="#h:27aabe51-3f44-40ac-a21e-f9de9dbb9254" rel="">Another</a></li>
<li><span class="section-num">6</span> <a href="#h:d0c1d159-905d-4598-a15c-ffb80f1d452d" rel="">总结</a></li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录(或转载)，侵删，原文为： <a href="https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary" target="_blank" rel="noopener noreffer ">https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary</a></p>
<h2 id="h:871f360d-063e-46ff-9c0a-18322d91be4c"><span class="section-num">1</span> <a href="https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary%23:~:text=TL;DR" target="_blank" rel="noopener noreffer ">TL;DR</a></h2>
<ul>
<li>不用启用 <code>net.ipv4.tcp_tw_recycle</code> ， 该选项已在 Linux4.12 废弃</li>
<li>多数情况下， <code>TIME-WAIT</code> 状态的 socket 无害</li>
</ul>
<h2 id="h:096c1a95-20d2-4ac1-b6f2-fac0a6b2e233"><span class="section-num">2</span> <a href="https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#about-the-time-wait-state" target="_blank" rel="noopener noreffer ">About the TIME-WAIT state</a></h2>
<h3 id="h:0a4a593c-1032-4cbd-bb0d-89c43f6348c0"><span class="section-num">2.1</span> <a href="https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary%23:~:text=TCP%20state%20diagram" target="_blank" rel="noopener noreffer ">TCP state diagram</a></h3>
<figure>
</figure>

<figure>
</figure>

<p><a href="http://tcpipguide.com/free/t_TCPOperationalOverviewandtheTCPFiniteStateMachineF-2.htm" target="_blank" rel="noopener noreffer ">http://tcpipguide.com/free/t_TCPOperationalOverviewandtheTCPFiniteStateMachineF-2.htm</a></p>]]></description></item><item><title>Linux Process States</title><link>https://yangyingchao.github.io/linux-process-states-baeldung-on-linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/linux-process-states-baeldung-on-linux/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#h:e18e2a33-c94e-4632-9c81-2b7c968471ca" rel="">The Linux Process States</a>
<ul>
<li><span class="section-num">1.1</span> <a href="#h:82e9a258-9ef3-4b9f-a6e0-43780e2f7c6b" rel="">Running or Runnable State (R)</a></li>
<li><span class="section-num">1.2</span> <a href="#h:af5ed80e-75ba-46bf-bd3c-fc469ce02284" rel="">Sleeping State: Interruptible (S) and Uninterruptible (D)</a></li>
<li><span class="section-num">1.3</span> <a href="#h:928eb1a4-c3a7-45e7-a8d8-031aefe9d89e" rel="">Stopped State (T)</a></li>
<li><span class="section-num">1.4</span> <a href="#h:fc7301f8-68e6-4139-9663-7ea505a75521" rel="">Zombie State (Z)</a></li>
</ul>
</li>
<li><span class="section-num">2</span> <a href="#h:0985a112-1b62-4921-9635-078e0ca52dca" rel="">Checking Process State</a>
<ul>
<li><span class="section-num">2.1</span> <a href="#h:d36c6068-e0db-468a-8b7f-349412d139f2" rel="">Displaying Process State Using ps</a></li>
<li><span class="section-num">2.2</span> <a href="#h:4aa374a8-e81e-499a-aa03-63c5e0949411" rel="">Using the top Command</a></li>
<li><span class="section-num">2.3</span> <a href="#h:5838f424-949c-4b9c-9c93-e77715bfe95c" rel="">The /proc Pseudo File</a></li>
</ul>
</li>
<li><span class="section-num">3</span> <a href="#h:3fbb304e-adb8-4e74-94f9-e6a5944f1b26" rel="">Summary</a></li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录(或转载)，侵删，原文为： <a href="https://www.baeldung.com/linux/process-states" target="_blank" rel="noopener noreffer ">https://www.baeldung.com/linux/process-states</a></p>
<h2 id="h:e18e2a33-c94e-4632-9c81-2b7c968471ca"><span class="section-num">1</span> The Linux Process States</h2>
<ul>
<li>Running or Runnable (R)</li>
<li>Uninterruptible Sleep (D)</li>
<li>Interruptable Sleep (S)</li>
<li>Stopped (T)</li>
<li>Zombie (Z)</li>
</ul>
<p>状态机如下：</p>]]></description></item></channel></rss>