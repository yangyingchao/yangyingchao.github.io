<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on 杂货铺</title><link>https://yangyingchao.github.io/tags/linux/</link><description>Recent content in Linux on 杂货铺</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 21 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyingchao.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux Rootkits — Multiple ways to hook syscall(s)</title><link>https://yangyingchao.github.io/linux-rootkits-multiple-ways-to-hook-syscall-s-7001cc02a1e6/</link><pubDate>Thu, 21 Sep 2023 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/linux-rootkits-multiple-ways-to-hook-syscall-s-7001cc02a1e6/</guid><description>&lt;div class="ox-hugo-toc toc has-section-numbers">
&lt;div class="heading">Table of Contents&lt;/div>
&lt;ul>
&lt;li>&lt;span class="section-num">1&lt;/span> &lt;a href="#h:98e4d628-ec24-45db-b9b1-fff7eba4a0af" rel="">Syscall Table hijacking — The good old way, 系统调用表劫持&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">2&lt;/span> &lt;a href="#h:45798689-8b14-43ec-8000-bbecea4d896c" rel="">sys_close — The brute force method&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">3&lt;/span> &lt;a href="#h:889b5097-0190-4799-a9c6-5cb7d50ad082" rel="">VFS hooking&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">4&lt;/span> &lt;a href="#h:ccc260a9-1238-4340-9ad4-0bd94a9a1d1e" rel="">The ftrace helper method&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;!--endtoc-->
&lt;p>本文为摘录(或转载)，侵删，原文为： &lt;a href="https://foxtrot-sq.medium.com/linux-rootkits-multiple-ways-to-hook-syscall-s-7001cc02a1e6" target="_blank" rel="noopener noreffer ">https://foxtrot-sq.medium.com/linux-rootkits-multiple-ways-to-hook-syscall-s-7001cc02a1e6&lt;/a>&lt;/p>
&lt;p>我们所见到的大多数恶意软件攻击中使用的 rootkit 都是开源的，其行为几乎与在系统中运行的正常进程相同（隐藏和挂钩）。从行为上来看，它们与正常进程几乎没有任何区别。在本文中，我们将探讨一些现有的方法，根据不同的 Linux 内核版本来挂钩系统调用。&lt;/p></description></item><item><title>How to Terminate Stuck or Unwanted User Sessions in Linux</title><link>https://yangyingchao.github.io/how-to-terminate-stuck-or-unwanted-user-sessions-in-linux/</link><pubDate>Fri, 08 Sep 2023 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/how-to-terminate-stuck-or-unwanted-user-sessions-in-linux/</guid><description>&lt;div class="ox-hugo-toc toc has-section-numbers">
&lt;div class="heading">Table of Contents&lt;/div>
&lt;ul>
&lt;li>&lt;span class="section-num">1&lt;/span> &lt;a href="#h:630c60b8-137a-4521-84fd-8c01eb6c2e48" rel="">Linux 中的 TTY 和 PTS 是什么？&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">2&lt;/span> &lt;a href="#h:78ab4e18-5d26-4a48-84a3-7d3129debc4e" rel="">如何在 Linux 中终止被卡住/不需要的用户会话&lt;/a>
&lt;ul>
&lt;li>&lt;span class="section-num">2.1&lt;/span> &lt;a href="#h:ef209893-46c7-448a-90a8-8eeffeb11171" rel="">Terminate User Session by TTY&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">2.2&lt;/span> &lt;a href="#h:fb2a4d0e-261f-43d3-b207-b366e4f2d4e2" rel="">按进程 ID 终止用户会话&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">2.3&lt;/span> &lt;a href="#h:d7fd8a22-d7ec-4841-9ae7-54f2f7892626" rel="">Conclusion&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;!--endtoc-->
&lt;p>本文为摘录(或转载)，侵删，原文为： &lt;a href="https://linuxiac.com/how-to-terminate-user-session-in-linux/" target="_blank" rel="noopener noreffer ">https://linuxiac.com/how-to-terminate-user-session-in-linux/&lt;/a>&lt;/p>
&lt;h2 id="h:630c60b8-137a-4521-84fd-8c01eb6c2e48">&lt;span class="section-num">1&lt;/span> Linux 中的 TTY 和 PTS 是什么？&lt;/h2>
&lt;p>在 Linux 中，&amp;ldquo;PTS&amp;quot;和&amp;quot;TTY&amp;quot;都指不同的终端设备，用于用户与操作系统之间的通信。它们作为输入命令和从系统接收输出的接口。&lt;/p></description></item><item><title>Ways to Deal With a Frozen Linux System</title><link>https://yangyingchao.github.io/frozen-linux-system/</link><pubDate>Mon, 28 Aug 2023 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/frozen-linux-system/</guid><description>&lt;div class="ox-hugo-toc toc has-section-numbers">
&lt;div class="heading">Table of Contents&lt;/div>
&lt;ul>
&lt;li>&lt;span class="section-num">1&lt;/span> &lt;a href="#h:660feb15-1dc5-4890-a586-8f6445c1a928" rel="">When everything else fails, talk with the Kernel using SysReq&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;!--endtoc-->
&lt;p>本文为摘录(或转载)，侵删，原文为： &lt;a href="https://linuxhandbook.com/frozen-linux-system/" target="_blank" rel="noopener noreffer ">https://linuxhandbook.com/frozen-linux-system/&lt;/a>&lt;/p>
&lt;h2 id="h:660feb15-1dc5-4890-a586-8f6445c1a928">&lt;span class="section-num">1&lt;/span> When everything else fails, talk with the Kernel using SysReq&lt;/h2>
&lt;p>有时，甚至切换到 TTY 也无法正常工作。整个系统都死了。但是不要放弃，很可能是一种假象。Linux 在这种情况下提供了一种更多的功能。&lt;/p></description></item><item><title>UNIX vs Linux: What's the Difference?</title><link>https://yangyingchao.github.io/unix-vs-linux-what-is-the-difference/</link><pubDate>Wed, 23 Aug 2023 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/unix-vs-linux-what-is-the-difference/</guid><description>&lt;div class="ox-hugo-toc toc has-section-numbers">
&lt;div class="heading">Table of Contents&lt;/div>
&lt;ul>
&lt;li>&lt;span class="section-num">1&lt;/span> &lt;a href="#h:96bcfbdc-a176-46f0-8ef4-f896231011df" rel="">Historical Context&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">2&lt;/span> &lt;a href="#h:b88361c2-1e1d-41ea-8db2-385848fe3b07" rel="">Licensing and Distribution&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">3&lt;/span> &lt;a href="#h:d5b11cf5-af8b-44c4-be05-5f429b7e5add" rel="">Kernel and System Architecture&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">4&lt;/span> &lt;a href="#h:8277c50e-efce-4969-b1f5-710aba15b454" rel="">Community and Development&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">5&lt;/span> &lt;a href="#h:e598928c-ec79-4065-a6a4-a127e374aa94" rel="">Customization and Flexibility&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">6&lt;/span> &lt;a href="#h:fdc8a361-b8e2-43d2-bcd1-996f9187ac25" rel="">User Interface&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">7&lt;/span> &lt;a href="#h:2d40a1f8-35bb-4873-bacd-84d517da8458" rel="">Market Share and Industry Application&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">8&lt;/span> &lt;a href="#h:650684d8-0cd6-4be4-a77a-3cc97b85fc40" rel="">Security and Stability&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">9&lt;/span> &lt;a href="#h:50d558df-80f3-42a0-8dda-954fd9071ee9" rel="">Conclusion&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;!--endtoc-->
&lt;p>本文为摘录(或转载)，侵删，原文为： &lt;a href="https://www.linuxjournal.com/content/unix-vs-linux-what-is-the-difference" target="_blank" rel="noopener noreffer ">https://www.linuxjournal.com/content/unix-vs-linux-what-is-the-difference&lt;/a>&lt;/p>
&lt;p>在复杂多变的操作系统领域里，UNIX 和 Linux 这两个显赫的巨头已经塑造了数字领域数十年。尽管这两个系统乍一看起来很相似，但深入分析后会发现它们存在根本性的区别，这些区别对开发人员、管理员和用户都有着重要的影响。在本文中，我们将踏上一段旅程，揭示 UNIX 和 Linux 之间的微妙差异，阐明它们的历史起源、许可模式、系统架构、社区、用户界面、市场应用、安全范式等方面的情况。&lt;/p></description></item><item><title>Coping with the TCP TIME-WAIT state on busy Linux servers</title><link>https://yangyingchao.github.io/coping-with-the-tcp-time-wait-state-on-busy-linux-servers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/coping-with-the-tcp-time-wait-state-on-busy-linux-servers/</guid><description>&lt;div class="ox-hugo-toc toc has-section-numbers">
&lt;div class="heading">Table of Contents&lt;/div>
&lt;ul>
&lt;li>&lt;span class="section-num">1&lt;/span> &lt;a href="#h:871f360d-063e-46ff-9c0a-18322d91be4c" rel="">TL;DR&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">2&lt;/span> &lt;a href="#h:096c1a95-20d2-4ac1-b6f2-fac0a6b2e233" rel="">About the TIME-WAIT state&lt;/a>
&lt;ul>
&lt;li>&lt;span class="section-num">2.1&lt;/span> &lt;a href="#h:0a4a593c-1032-4cbd-bb0d-89c43f6348c0" rel="">TCP state diagram&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">2.2&lt;/span> &lt;a href="#h:761d930e-9258-42e1-8792-75aafd6a4642" rel="">Purpose&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;span class="section-num">3&lt;/span> &lt;a href="#h:90387b11-15a7-43e6-9d48-031298e3c45a" rel="">Problems&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">4&lt;/span> &lt;a href="#h:fe22875f-822e-470b-a2cf-8ca13e804920" rel="">Other solutions&lt;/a>
&lt;ul>
&lt;li>&lt;span class="section-num">4.1&lt;/span> &lt;a href="#h:27aabe51-3f44-40ac-a21e-f9de9dbb9254" rel="">net.ipv4.tcp_tw_reuse&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;span class="section-num">5&lt;/span> &lt;a href="#h:27aabe51-3f44-40ac-a21e-f9de9dbb9254" rel="">Another&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">6&lt;/span> &lt;a href="#h:d0c1d159-905d-4598-a15c-ffb80f1d452d" rel="">总结&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;!--endtoc-->
&lt;p>本文为摘录(或转载)，侵删，原文为： &lt;a href="https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary" target="_blank" rel="noopener noreffer ">https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary&lt;/a>&lt;/p>
&lt;h2 id="h:871f360d-063e-46ff-9c0a-18322d91be4c">&lt;span class="section-num">1&lt;/span> &lt;a href="https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary%23:~:text=TL;DR" target="_blank" rel="noopener noreffer ">TL;DR&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>不用启用 &lt;code>net.ipv4.tcp_tw_recycle&lt;/code> ， 该选项已在 Linux4.12 废弃&lt;/li>
&lt;li>多数情况下， &lt;code>TIME-WAIT&lt;/code> 状态的 socket 无害&lt;/li>
&lt;/ul>
&lt;h2 id="h:096c1a95-20d2-4ac1-b6f2-fac0a6b2e233">&lt;span class="section-num">2&lt;/span> &lt;a href="https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#about-the-time-wait-state" target="_blank" rel="noopener noreffer ">About the TIME-WAIT state&lt;/a>&lt;/h2>
&lt;h3 id="h:0a4a593c-1032-4cbd-bb0d-89c43f6348c0">&lt;span class="section-num">2.1&lt;/span> &lt;a href="https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux#summary%23:~:text=TCP%20state%20diagram" target="_blank" rel="noopener noreffer ">TCP state diagram&lt;/a>&lt;/h3>
&lt;figure>&lt;img src="https://yangyingchao.github.io/ox-hugo/tcp-state-diagram-v2.svg" width="727px">
&lt;/figure>

&lt;figure>&lt;img src="https://yangyingchao.github.io/ox-hugo/tcpfsm.png" width="562px">
&lt;/figure>

&lt;p>&lt;a href="http://tcpipguide.com/free/t_TCPOperationalOverviewandtheTCPFiniteStateMachineF-2.htm" target="_blank" rel="noopener noreffer ">http://tcpipguide.com/free/t_TCPOperationalOverviewandtheTCPFiniteStateMachineF-2.htm&lt;/a>&lt;/p></description></item><item><title>Linux Process States</title><link>https://yangyingchao.github.io/linux-process-states-baeldung-on-linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/linux-process-states-baeldung-on-linux/</guid><description>&lt;div class="ox-hugo-toc toc has-section-numbers">
&lt;div class="heading">Table of Contents&lt;/div>
&lt;ul>
&lt;li>&lt;span class="section-num">1&lt;/span> &lt;a href="#h:e18e2a33-c94e-4632-9c81-2b7c968471ca" rel="">The Linux Process States&lt;/a>
&lt;ul>
&lt;li>&lt;span class="section-num">1.1&lt;/span> &lt;a href="#h:82e9a258-9ef3-4b9f-a6e0-43780e2f7c6b" rel="">Running or Runnable State (R)&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">1.2&lt;/span> &lt;a href="#h:af5ed80e-75ba-46bf-bd3c-fc469ce02284" rel="">Sleeping State: Interruptible (S) and Uninterruptible (D)&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">1.3&lt;/span> &lt;a href="#h:928eb1a4-c3a7-45e7-a8d8-031aefe9d89e" rel="">Stopped State (T)&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">1.4&lt;/span> &lt;a href="#h:fc7301f8-68e6-4139-9663-7ea505a75521" rel="">Zombie State (Z)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;span class="section-num">2&lt;/span> &lt;a href="#h:0985a112-1b62-4921-9635-078e0ca52dca" rel="">Checking Process State&lt;/a>
&lt;ul>
&lt;li>&lt;span class="section-num">2.1&lt;/span> &lt;a href="#h:d36c6068-e0db-468a-8b7f-349412d139f2" rel="">Displaying Process State Using ps&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">2.2&lt;/span> &lt;a href="#h:4aa374a8-e81e-499a-aa03-63c5e0949411" rel="">Using the top Command&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">2.3&lt;/span> &lt;a href="#h:5838f424-949c-4b9c-9c93-e77715bfe95c" rel="">The /proc Pseudo File&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;span class="section-num">3&lt;/span> &lt;a href="#h:3fbb304e-adb8-4e74-94f9-e6a5944f1b26" rel="">Summary&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;!--endtoc-->
&lt;p>本文为摘录(或转载)，侵删，原文为： &lt;a href="https://www.baeldung.com/linux/process-states" target="_blank" rel="noopener noreffer ">https://www.baeldung.com/linux/process-states&lt;/a>&lt;/p>
&lt;h2 id="h:e18e2a33-c94e-4632-9c81-2b7c968471ca">&lt;span class="section-num">1&lt;/span> The Linux Process States&lt;/h2>
&lt;ul>
&lt;li>Running or Runnable (R)&lt;/li>
&lt;li>Uninterruptible Sleep (D)&lt;/li>
&lt;li>Interruptable Sleep (S)&lt;/li>
&lt;li>Stopped (T)&lt;/li>
&lt;li>Zombie (Z)&lt;/li>
&lt;/ul>
&lt;p>状态机如下：&lt;/p></description></item></channel></rss>