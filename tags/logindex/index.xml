<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Logindex on 杂货铺</title><link>https://yangyingchao.github.io/tags/logindex/</link><description>Recent content in Logindex on 杂货铺</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 11 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyingchao.github.io/tags/logindex/index.xml" rel="self" type="application/rss+xml"/><item><title>LogIndex | PolarDB for PostgreSQL</title><link>https://yangyingchao.github.io/logindex/</link><pubDate>Mon, 11 Dec 2023 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/logindex/</guid><description>&lt;div class="ox-hugo-toc toc has-section-numbers">
&lt;div class="heading">Table of Contents&lt;/div>
&lt;ul>
&lt;li>&lt;span class="section-num">1&lt;/span> &lt;a href="#h:d8904674-f80c-4a35-9330-9aced14d44dc" rel="">背景介绍&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">2&lt;/span> &lt;a href="#h:e3c2df1f-fbcd-4486-90b1-4860d3c32d5d" rel="">RO 内存同步架构&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">3&lt;/span> &lt;a href="#h:d5723eaa-8395-4fc7-8991-ff1df89f537c" rel="">WAL Meta&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">4&lt;/span> &lt;a href="#h:6f657dbb-5cff-45a3-af7e-9f3f13c90502" rel="">LogIndex&lt;/a>
&lt;ul>
&lt;li>&lt;span class="section-num">4.1&lt;/span> &lt;a href="#h:6a5fd70c-9346-4cf7-9d32-10bd6f8c64d3" rel="">内存数据结构&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">4.2&lt;/span> &lt;a href="#h:0bc1158e-9125-4656-801c-9fd472160b03" rel="">磁盘数据结构&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;span class="section-num">5&lt;/span> &lt;a href="#h:d3ee0114-79af-4af3-a7c0-d984b289515e" rel="">日志回放&lt;/a>
&lt;ul>
&lt;li>&lt;span class="section-num">5.1&lt;/span> &lt;a href="#h:e9306eb7-c9bd-444d-9d37-a8b2471b936a" rel="">延迟回放&lt;/a>&lt;/li>
&lt;li>&lt;span class="section-num">5.2&lt;/span> &lt;a href="#h:9fc15f98-21cf-4d60-85bb-0a6a4e6a5147" rel="">Mini Transaction&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;span class="section-num">6&lt;/span> &lt;a href="#h:10fd2c47-d2a8-4c4e-9621-09687964e806" rel="">总结&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;!--endtoc-->
&lt;p>本文为摘录(或转载)，侵删，原文为： &lt;a href="https://apsaradb.github.io/PolarDB-for-PostgreSQL/zh/theory/logindex.html" target="_blank" rel="noopener noreffer ">https://apsaradb.github.io/PolarDB-for-PostgreSQL/zh/theory/logindex.html&lt;/a>&lt;/p>
&lt;h2 id="h:d8904674-f80c-4a35-9330-9aced14d44dc">&lt;span class="section-num">1&lt;/span> 背景介绍&lt;/h2>
&lt;p>PolarDB 采用了共享存储一写多读架构，读写节点 RW 和多个只读节点 RO 共享同一份存储，读写节点可以读写共享存储中的数据；只读节点仅能各自通过回放日志，从共享存储中读取数据，而不能写入，只读节点 RO 通过内存同步来维护数据的一致性。此外，只读节点可同时对外提供服务用于实现读写分离与负载均衡，在读写节点异常 crash 时，可将只读节点提升为读写节点，保证集群的高可用。基本架构图如下所示：&lt;/p></description></item></channel></rss>