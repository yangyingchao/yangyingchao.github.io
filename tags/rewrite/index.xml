<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Rewrite - 标签 - 老杨的杂货铺</title><link>https://yangyingchao.github.io/tags/rewrite/</link><description>Rewrite - 标签 - 老杨的杂货铺</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://yangyingchao.github.io/tags/rewrite/" rel="self" type="application/rss+xml"/><item><title>A Learned Query Rewrite System using Monte Carlo Tree Search</title><link>https://yangyingchao.github.io/p46-li/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/p46-li/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#h:46536eca-7ea9-4ca8-80f5-de498e0868a9" rel="">INTRODUCTION</a></li>
<li><span class="section-num">2</span> <a href="#h:a4cf4c8f-4467-4181-b74c-5347a4209ae6" rel="">LearnedRewrite</a>
<ul>
<li><span class="section-num">2.1</span> <a href="#h:4e4f4b6c-db9f-46e4-8921-1ff6007daec1" rel="">树形结构</a></li>
</ul>
</li>
<li><span class="section-num">3</span> <a href="#h:44d869de-543c-466b-850e-e8f46557dcc5" rel="">PRELIMINARIES</a>
<ul>
<li><span class="section-num">3.1</span> <a href="#h:5fd43385-0787-467c-9b88-873a9dca9406" rel="">Query Rewrite Rules</a></li>
<li><span class="section-num">3.2</span> <a href="#h:a32a0924-5b47-4885-9cea-878cb01dd027" rel="">Query Rewrite</a></li>
</ul>
</li>
<li><span class="section-num">4</span> <a href="#h:31bb8cdf-d5e0-41fe-a908-17e696dca69a" rel="">TREE SEARCH FOR QUERY REWRITE</a>
<ul>
<li><span class="section-num">4.1</span> <a href="#h:75f54fbc-fec3-421e-80be-b95c589828aa" rel="">Overview of Policy Tree Search</a></li>
</ul>
</li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录(或转载)，侵删，原文为： attachments/pdf/7/p46-li.pdf</p>
<ul>
<li>
<p>查询重写使用启发式算法来实现，有两个限制</p>
<ul>
<li>规则的应用顺序严重影响查询性能，但
<ul>
<li>可能的重写顺序随查询涉及到的算子指数增长</li>
<li>受限于搜索空间大小限制，很难找到最佳的顺序</li>
</ul>
</li>
<li>针对不同的查询，不同的重写规则的收益也不同
<ul>
<li>当前的方法，只能应用于单个计划，而不能有效的估计查询重写的收益</li>
</ul>
</li>
</ul>
</li>
<li>
<p>提出了基于策略树树的查询重写框架</p>]]></description></item></channel></rss>