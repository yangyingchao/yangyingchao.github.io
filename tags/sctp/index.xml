<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Sctp - 标签 - 老杨的杂货铺</title><link>https://yangyingchao.github.io/tags/sctp/</link><description>Sctp - 标签 - 老杨的杂货铺</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://yangyingchao.github.io/tags/sctp/" rel="self" type="application/rss+xml"/><item><title>Stream Control Transmission Protocol (SCTP)</title><link>https://yangyingchao.github.io/sctp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/sctp/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#h:2815bca8-e6bb-4b22-93b8-52266d83331a" rel="">SCTP Associations</a></li>
<li><span class="section-num">2</span> <a href="#h:a7d3a58f-21fb-4e4e-b3d1-1de8bf5291e3" rel="">Using Multiple Interfaces</a></li>
<li><span class="section-num">3</span> <a href="#h:bbf694f6-56f7-4d97-8334-74bfe30fd53d" rel="">Streams</a></li>
<li><span class="section-num">4</span> <a href="#h:276f19c3-3843-4d1b-a1ee-3dfd0126996c" rel="">Association ID</a></li>
<li><span class="section-num">5</span> <a href="#h:ae3adb64-a1ab-4352-aa2a-8b58a81d1bf4" rel="">Rec &amp; Send</a></li>
<li><span class="section-num">6</span> <a href="#h:d0a6f1bd-1d91-4b94-b5cd-f70950fb9e9f" rel="">CDB with SCTP?</a></li>
<li><span class="section-num">7</span> <a href="#h:fa817dc8-9b69-4412-8a1c-54067ac156b4" rel="">SCTP Interface Model</a>
<ul>
<li><span class="section-num">7.1</span> <a href="#h:79c523c0-858f-44d3-a13a-8ffb6cd217ac" rel="">two types of SCTP sockets</a></li>
<li><span class="section-num">7.2</span> <a href="#h:af8a22bd-336b-47ac-a22b-ba2a592aa426" rel="">The One-to-One Style</a></li>
<li><span class="section-num">7.3</span> <a href="#h:400f90d1-fb4b-4e76-ae90-8feff25e9124" rel="">The One-to-Many Style</a></li>
</ul>
</li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录，原文为： <a href="https://www.linuxjournal.com/article/9749" target="_blank" rel="noopener noreffer ">https://www.linuxjournal.com/article/9749</a></p>
<h2 id="h:2815bca8-e6bb-4b22-93b8-52266d83331a"><span class="section-num">1</span> SCTP Associations</h2>
<p>SCTP 的联合 (association) 类似于 TCP 的连接 (connection) ， 但又有不同：</p>
<ul>
<li>TCP connection 在服务端和客户端之间的网络接口上建立的 <strong>一对一</strong> 连接</li>
<li>SCTP association 是 <strong>多对多</strong> ：
<ul>
<li>可以在服务端的多个网口和客户端的多个网口之间建立联合 <br />
例如，服务端和客户端各自有两个设备： Ethernet &amp; Wi-Fi , 则服务端和客户端之
间的联合可以包括 4 路：
<ul>
<li>Eth -&gt; Eth</li>
<li>Eth -&gt; Wi-Fi</li>
<li>Wi-Fi -&gt; Eth</li>
<li>Wi-Fi -&gt; Wi-Fi</li>
</ul>
</li>
</ul>
</li>
</ul>
<!--listend-->
<ul>
<li>一个联合中又可以有多个 stream ， 各个 stream 之间互不干扰，不会阻塞 <br />
stream 用 stream id 来区分，从 0 开始增加</li>
</ul>
<!--listend-->
<ul>
<li>每个 socket 可以用来服务多个联合 <br />
也就是说，每个 scoket 可以用来同多个主机通讯。 每个 association 用
association id 来区分。</li>
</ul>
<h2 id="h:a7d3a58f-21fb-4e4e-b3d1-1de8bf5291e3"><span class="section-num">2</span> Using Multiple Interfaces</h2>
<ul>
<li>服务端可以通过 <code>sctp_bindx()</code> 来绑定多个接口</li>
<li>客户端可以通过 <code>sctp_connectx()</code> 来使用多个地址</li>
<li>客户端可以通过 <code>sctp_getpaddrs()</code> 来获取远端地址</li>
<li>客户端可以通过 <code>sctp_getladdrs()</code> 来获取本地地址</li>
</ul>
<p>Once an association is set up between two endpoints, messages can be sent between them. Note that SCTP does not concern
itself with QoS (Quality-of-Service) issues, such as real-time delivery, but only with reliability issues. SCTP uses the
multihomed capabilities to try as many possible routes as possible to get messages through. So on the sending side,
there is no control over which interfaces are used; indeed, the sender might even use a scheme such as round-robin among
its interfaces for each message. However, the sending application can indicate to its SCTP stack which of the remote
peer&rsquo;s interface it would prefer to use, and it can tell the remote peer on which interfaces it would prefer to receive
messages. These are done by using the setsockopt() call with option type as SCTP_PRIMARY_ADDR or
SCTP_SET_PEER_PRIMARY_ADDR. Of course, if these particular addresses are not available, SCTP simply will use different
addresses in the association.</p>]]></description></item></channel></rss>