<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Spinlock - 标签 - 老杨的杂货铺</title><link>https://yangyingchao.github.io/tags/spinlock/</link><description>Spinlock - 标签 - 老杨的杂货铺</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 27 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyingchao.github.io/tags/spinlock/" rel="self" type="application/rss+xml"/><item><title>A Close Look at a Spinlock – Embedded in Academia</title><link>https://yangyingchao.github.io/2173/</link><pubDate>Wed, 27 Dec 2023 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/2173/</guid><description><![CDATA[<p>本文为摘录，原文为： <a href="https://blog.regehr.org/archives/2173" target="_blank" rel="noopener noreffer ">https://blog.regehr.org/archives/2173</a></p>
<p>自旋锁 (spinlock) 是多处理器操作系统提供的最基本的互斥原语。自旋锁需要保护当前 CPU 免受
抢占（通常通过禁用中断，但我们会在本文中忽略这个方面），并且还需要防止其他核心同时访问临
界区（通过使用原子内存操作）。正如其名称所示，尝试获取已锁定的自旋锁会简单地自旋：它们会
消耗 CPU 时间：</p>]]></description></item></channel></rss>