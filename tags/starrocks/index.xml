<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Starrocks - 标签 - 老杨的杂货铺</title><link>https://yangyingchao.github.io/tags/starrocks/</link><description>Starrocks - 标签 - 老杨的杂货铺</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 03 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyingchao.github.io/tags/starrocks/" rel="self" type="application/rss+xml"/><item><title>StarRocks 技术内幕 | 基于全局字典的极速字符串查询</title><link>https://yangyingchao.github.io/my_oschina_net_blog_5566031/</link><pubDate>Fri, 03 Jan 2025 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/my_oschina_net_blog_5566031/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e5%bc%95%e5%85%a5%e4%bd%8e%e5%9f%ba%e6%95%b0%e5%ad%97%e5%85%b8%e4%bc%98%e5%8c%96" rel="">为什么要引入低基数字典优化</a></li>
<li><span class="section-num">2</span> <a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e5%85%a8%e5%b1%80%e5%ad%97%e5%85%b8" rel="">为什么需要全局字典</a></li>
<li><span class="section-num">3</span> <a href="#%e5%a6%82%e4%bd%95%e9%ab%98%e6%95%88%e6%9e%84%e5%bb%ba%e5%85%a8%e5%b1%80%e5%ad%97%e5%85%b8" rel="">如何高效构建全局字典</a>
<ul>
<li><span class="section-num">3.1</span> <a href="#%e9%80%9a%e5%b8%b8%e7%9a%84%e5%88%86%e5%b8%83%e5%bc%8f%e5%ad%97%e5%85%b8%e6%9e%84%e5%bb%ba%e6%96%b9%e5%bc%8f" rel="">通常的分布式字典构建方式</a></li>
<li><span class="section-num">3.2</span> <a href="#starrocks-%e5%85%a8%e5%b1%80%e5%ad%97%e5%85%b8%e7%9a%84%e6%9e%84%e5%bb%ba" rel="">StarRocks 全局字典的构建</a></li>
</ul>
</li>
<li><span class="section-num">4</span> <a href="#%e5%a6%82%e4%bd%95%e9%ab%98%e6%95%88%e4%bd%bf%e7%94%a8%e5%85%a8%e5%b1%80%e5%ad%97%e5%85%b8" rel="">如何高效使用全局字典</a>
<ul>
<li><span class="section-num">4.1</span> <a href="#cbo-%e4%bc%98%e5%8c%96%e5%99%a8%e7%9a%84%e7%b4%a7%e5%af%86%e9%85%8d%e5%90%88" rel="">CBO 优化器的紧密配合</a></li>
<li><span class="section-num">4.2</span> <a href="#%e5%85%a8%e5%b1%80%e5%ad%97%e5%85%b8%e7%9a%84%e5%ad%97%e7%ac%a6%e4%b8%b2%e5%87%bd%e6%95%b0%e4%bc%98%e5%8c%96" rel="">全局字典的字符串函数优化</a></li>
</ul>
</li>
<li><span class="section-num">5</span> <a href="#%e4%bc%98%e5%8c%96%e6%95%88%e6%9e%9c" rel="">优化效果</a></li>
<li><span class="section-num">6</span> <a href="#%e6%80%bb%e7%bb%93" rel="">总结</a></li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录，原文为： <a href="https://segmentfault.com/a/1190000042326071" target="_blank" rel="noopener noreffer ">https://segmentfault.com/a/1190000042326071</a></p>
<p><code>作者：冯浩桉，StarRocks 核心研发工程师，StarRocks Committer</code></p>]]></description></item><item><title>数据库 - StarRocks 技术内幕 | Join 查询优化</title><link>https://yangyingchao.github.io/segmentfault_com_a_1190000042739883/</link><pubDate>Fri, 03 Jan 2025 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/segmentfault_com_a_1190000042739883/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#join-%e8%83%8c%e6%99%af" rel="">Join 背景</a></li>
<li><span class="section-num">2</span> <a href="#join-%e9%80%bb%e8%be%91%e4%bc%98%e5%8c%96" rel="">Join 逻辑优化</a></li>
<li><span class="section-num">3</span> <a href="#join-reorder" rel="">Join Reorder</a></li>
<li><span class="section-num">4</span> <a href="#%e5%88%86%e5%b8%83%e5%bc%8f-join-%e8%a7%84%e5%88%92" rel="">分布式 Join 规划</a></li>
<li><span class="section-num">5</span> <a href="#%e6%80%bb%e7%bb%93" rel="">总结</a></li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录，原文为： <a href="https://segmentfault.com/a/1190000042739883" target="_blank" rel="noopener noreffer ">https://segmentfault.com/a/1190000042739883</a></p>
<p>作者：贺凯，StarRocks Committer</p>
<p>导读：欢迎来到 StarRocks 技术内幕系列文章，我们将为你全方位揭晓 StarRocks 背后的技术原理和实践细节，助你逐步上手这款明星
开源数据库产品。</p>]]></description></item><item><title>StarRocks 技术内幕：查询原理浅析</title><link>https://yangyingchao.github.io/my_oschina_net_blog_5519656/</link><pubDate>Thu, 02 Jan 2025 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/my_oschina_net_blog_5519656/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#%e4%bb%8e-sql-%e6%96%87%e6%9c%ac%e5%88%b0%e6%89%a7%e8%a1%8c%e8%ae%a1%e5%88%92" rel="">从 SQL 文本到执行计划</a>
<ul>
<li><span class="section-num">1.1</span> <a href="#sql-parse" rel="">SQL Parse</a></li>
<li><span class="section-num">1.2</span> <a href="#sql-analyze" rel="">SQL Analyze</a></li>
<li><span class="section-num">1.3</span> <a href="#sql-logical-plan" rel="">SQL Logical Plan</a></li>
<li><span class="section-num">1.4</span> <a href="#sql-optimize" rel="">SQL Optimize</a></li>
<li><span class="section-num">1.5</span> <a href="#logical-plan-rewrite" rel="">Logical Plan Rewrite</a></li>
<li><span class="section-num">1.6</span> <a href="#cbo-transform" rel="">CBO Transform</a></li>
<li><span class="section-num">1.7</span> <a href="#%e7%bb%9f%e8%ae%a1%e4%bf%a1%e6%81%af%e5%92%8c-cost-%e4%bc%b0%e8%ae%a1" rel="">统计信息和 Cost 估计</a></li>
<li><span class="section-num">1.8</span> <a href="#%e7%94%9f%e6%88%90-plan-fragment" rel="">生成 Plan fragment</a></li>
</ul>
</li>
<li><span class="section-num">2</span> <a href="#%e6%89%a7%e8%a1%8c%e8%ae%a1%e5%88%92%e7%9a%84%e8%b0%83%e5%ba%a6" rel="">执行计划的调度</a></li>
<li><span class="section-num">3</span> <a href="#%e6%89%a7%e8%a1%8c%e8%ae%a1%e5%88%92%e7%9a%84%e6%89%a7%e8%a1%8c" rel="">执行计划的执行</a>
<ul>
<li><span class="section-num">3.1</span> <a href="#mpp-%e5%a4%9a%e6%9c%ba%e5%b9%b6%e8%a1%8c%e6%89%a7%e8%a1%8c" rel="">MPP 多机并行执行</a></li>
<li><span class="section-num">3.2</span> <a href="#pipeline-%e5%8d%95%e6%9c%ba%e5%b9%b6%e8%a1%8c%e6%89%a7%e8%a1%8c" rel="">Pipeline 单机并行执行</a></li>
<li><span class="section-num">3.3</span> <a href="#%e5%90%91%e9%87%8f%e5%8c%96%e6%89%a7%e8%a1%8c" rel="">向量化执行</a></li>
</ul>
</li>
<li><span class="section-num">4</span> <a href="#%e6%80%bb%e7%bb%93" rel="">总结</a></li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录，原文为： <a href="https://my.oschina.net/u/5658056/blog/5519656" target="_blank" rel="noopener noreffer ">https://my.oschina.net/u/5658056/blog/5519656</a></p>
<p>一条查询 SQL 在关系型分布式数据库中的处理，通常需要经过 3 大步骤：</p>]]></description></item><item><title>产品特性 | StarRocks</title><link>https://yangyingchao.github.io/docs_starrocks_io_features/</link><pubDate>Thu, 02 Jan 2025 00:00:00 +0000</pubDate><author>yc</author><guid>https://yangyingchao.github.io/docs_starrocks_io_features/</guid><description><![CDATA[<div class="ox-hugo-toc toc has-section-numbers">
<div class="heading">Table of Contents</div>
<ul>
<li><span class="section-num">1</span> <a href="#mpp-%e5%88%86%e5%b8%83%e5%bc%8f%e6%89%a7%e8%a1%8c%e6%a1%86%e6%9e%b6" rel="">MPP 分布式执行框架</a></li>
<li><span class="section-num">2</span> <a href="#%e5%85%a8%e9%9d%a2%e5%90%91%e9%87%8f%e5%8c%96%e6%89%a7%e8%a1%8c%e5%bc%95%e6%93%8e" rel="">全面向量化执行引擎</a></li>
<li><span class="section-num">3</span> <a href="#%e5%ad%98%e5%82%a8%e8%ae%a1%e7%ae%97%e5%88%86%e7%a6%bb" rel="">存储计算分离</a></li>
<li><span class="section-num">4</span> <a href="#cbo-%e4%bc%98%e5%8c%96%e5%99%a8" rel="">CBO 优化器</a></li>
<li><span class="section-num">5</span> <a href="#%e5%8f%af%e5%ae%9e%e6%97%b6%e6%9b%b4%e6%96%b0%e7%9a%84%e5%88%97%e5%bc%8f%e5%ad%98%e5%82%a8%e5%bc%95%e6%93%8e" rel="">可实时更新的列式存储引擎</a></li>
<li><span class="section-num">6</span> <a href="#%e6%99%ba%e8%83%bd%e7%9a%84%e7%89%a9%e5%8c%96%e8%a7%86%e5%9b%be" rel="">智能的物化视图</a></li>
<li><span class="section-num">7</span> <a href="#%e6%95%b0%e6%8d%ae%e6%b9%96%e5%88%86%e6%9e%90" rel="">数据湖分析</a></li>
</ul>
</div>
<!--endtoc-->
<p>本文为摘录，原文为： <a href="https://docs.starrocks.io/zh/docs/introduction/Features/" target="_blank" rel="noopener noreffer ">https://docs.starrocks.io/zh/docs/introduction/Features/</a></p>
<h2 id="mpp-分布式执行框架"><span class="section-num">1</span> MPP 分布式执行框架</h2>
<p>StarRocks 采用 MPP (Massively Parallel Processing) 分布式执行框架。在 MPP 执行框架中，一条查
询请求会被拆分成多个物理计算单元，在多机并行执行。每个执行节点拥有独享的资源（CPU、内存）。
MPP 执行框架能够使得单个查询请求可以充分利用所有执行节点的资源，所以单个查询的性能可以随着集
群的水平扩展而不断提升。</p>]]></description></item></channel></rss>