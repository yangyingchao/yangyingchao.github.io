<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>starrocks on MyNotes</title><link>https://yangyingchao.github.io/tags/starrocks/</link><description>Recent content in starrocks on MyNotes</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 03 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyingchao.github.io/tags/starrocks/index.xml" rel="self" type="application/rss+xml"/><item><title>StarRocks 技术内幕 | 基于全局字典的极速字符串查询</title><link>https://yangyingchao.github.io/posts/my_oschina_net_blog_5566031/</link><pubDate>Fri, 03 Jan 2025 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/my_oschina_net_blog_5566031/</guid><description>1 为什么要引入低基数字典优化 2 为什么需要全局字典 3 如何高效构建全局字典 3.1 通常的分布式字典构建方式 3.2 StarRocks 全局字典的构建 4 如何高效使用全局字典 4.1 CBO</description></item><item><title>数据库 - StarRocks 技术内幕 | Join 查询优化</title><link>https://yangyingchao.github.io/posts/segmentfault_com_a_1190000042739883/</link><pubDate>Fri, 03 Jan 2025 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/segmentfault_com_a_1190000042739883/</guid><description>1 Join 背景 2 Join 逻辑优化 3 Join Reorder 4 分布式 Join 规划 5 总结 本文为摘录，原文为： https://segmentfault.com/a/1190000042739883 作者：贺凯，StarRocks Committer 导读：欢迎来到 StarRocks 技术内幕系列文章，我们将</description></item><item><title>StarRocks 技术内幕：查询原理浅析</title><link>https://yangyingchao.github.io/posts/my_oschina_net_blog_5519656/</link><pubDate>Thu, 02 Jan 2025 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/my_oschina_net_blog_5519656/</guid><description>1 从 SQL 文本到执行计划 本文为摘录，原文为： https://my.oschina.net/u/5658056/blog/5519656 一条查询 SQL 在关系型分布式数据库中的处理，通常需要经过 3 大步骤： 将 SQL 文本转换成一个 “最佳的”分布式物</description></item><item><title>产品特性 | StarRocks</title><link>https://yangyingchao.github.io/posts/docs_starrocks_io_features/</link><pubDate>Thu, 02 Jan 2025 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/docs_starrocks_io_features/</guid><description>1 MPP 分布式执行框架 2 全面向量化执行引擎 3 存储计算分离 4 CBO 优化器 5 可实时更新的列式存储引擎 6 智能的物化视图 7 数据湖分析 本文为摘录，原文为： https://docs.starrocks.io/zh/docs/introduction/Features/ 1</description></item></channel></rss>