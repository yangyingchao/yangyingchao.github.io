<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>tag1 on MyNotes</title><link>https://yangyingchao.github.io/tags/tag1/</link><description>Recent content in tag1 on MyNotes</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 28 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyingchao.github.io/tags/tag1/index.xml" rel="self" type="application/rss+xml"/><item><title>Ways to Deal With a Frozen Linux System</title><link>https://yangyingchao.github.io/posts/frozen-linux-system/</link><pubDate>Mon, 28 Aug 2023 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/frozen-linux-system/</guid><description>1 When everything else fails, talk with the Kernel using SysReq 本文为摘录，原文为： https://linuxhandbook.com/frozen-linux-system/ 1 When everything else fails, talk with the Kernel using SysReq 有时，甚至切换到 TTY 也无法正常工作。整个系统都死了。但是不要放弃，很可能是一</description></item><item><title>ABC: Attributed Bipartite Co-clustering 双向联合集聚归因算法</title><link>https://yangyingchao.github.io/posts/p2134-kim/</link><pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/p2134-kim/</guid><description>本文为摘录，原文为： ../pdf/6/p2134-kim.pdf 本文介绍了一种称为 ABC（Attributed Bipartite Co-clustering 双向联合集聚归因算法）的问题， 它对于一个具有属性的二分图进行聚类。对</description></item><item><title>Cardinality Estimation in DBMS: A Comprehensive Benchmark Evaluation</title><link>https://yangyingchao.github.io/posts/p752-zhu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/p752-zhu/</guid><description>1 ABSTRACT 2 INTRODUCTION 3 PRELIMINARIES AND BACKGROUND 4 EVALUATION PLAN 4.1 CardEst Algorithms 本文为摘录，原文为： ../pdf/2/p752-zhu.pdf 1 ABSTRACT we compare the effectiveness of CardEst methods in a real DBMS We establish a new benchmark for CardEst, which: contains a new complex realworld dataset STATS and a diverse query workload STATS-CEB. We integrate multiple most representative CardEst methods into PostgreSQL, and evaluate</description></item><item><title>Columnar Formats for Schemaless LSM-based Document Stores</title><link>https://yangyingchao.github.io/posts/p2085-alkowaileet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/p2085-alkowaileet/</guid><description>1 INTRODUCTION 2 BACKGROUND 2.1 Apache AsterixDB 本文为摘录，原文为： ../pdf/f/p2085-alkowaileet.pdf 这篇论文探讨了文档存储数据库系统的数据模型灵活性限制其在列式关系数据库中进行分析工作负载 的表现。作者提出</description></item><item><title>GitHub - powa-team/powa: PostgreSQL Workload Analyzer</title><link>https://yangyingchao.github.io/posts/powa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/powa/</guid><description>本文为摘录，原文为： https://github.com/powa-team/powa Workload Analyzer.</description></item><item><title>Hash Index of PG</title><link>https://yangyingchao.github.io/posts/pg_hash_index/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/pg_hash_index/</guid><description>1 Hash Indexing 2 Page Addressing 本文为摘录，原文为： ../../../Work/pg_master/src/backend/access/hash/README 1 Hash Indexing 这个目录包含了 Postgres 的散列索引实现。其中大部分核心思想来自于 Margo Seltzer 和 Ozan Yigit 在 1991 年 1 月举行的冬季 USENIX 会议上的论文</description></item><item><title>Performance Tip of the Week</title><link>https://yangyingchao.github.io/posts/perf-tip-of-week/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/perf-tip-of-week/</guid><description>1 #9: Optimizations past their prime 1.1 Best practices 1.2 #21: Improving the efficiency of your regular expressions 本文为摘录，原文为： https://abseil.io/fast 1 #9: Optimizations past their prime 1.1 Best practices – 可能的情况下编写清晰、惯用的代码 Prefer writing clear, idiomatic code whenever possible. It is not only easier to read and</description></item><item><title>pgaudit/pgaudit: PostgreSQL Audit Extension</title><link>https://yangyingchao.github.io/posts/pgaudit#readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/pgaudit#readme/</guid><description>1 Introduction 2 Why pgAudit 3 Usage Considerations 4 Settings 4.1 pgaudit.log 4.2 pgaudit.log_catalog 5 Session Audit Logging 6 Object Audit Logging 7 Format 本文为摘录，原文为： https://github.com/pgaudit/pgaudit#readme 1 Introduction PostgreSQL 审计扩展（pgAudit）通过标准的 PostgreSQL 日志记录功能提供详细的会话</description></item><item><title>The Design and Implementation of Modern Column-Oriented Database Systems</title><link>https://yangyingchao.github.io/posts/the-design-and-implementation-of-modern-column-oriented-database-systems-abadi-column-stores/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/the-design-and-implementation-of-modern-column-oriented-database-systems-abadi-column-stores/</guid><description>1 Introduction 1.1 Virtual IDs 1.2 Block-oriented and vectorized processing \\ 1.3 Late materialization 晚期物化 1.4 Column-specific compression 1.5 Direct operation on compressed data 1.6 Efficient join implementations 1.7 Redundant representation of individual columns in dif- ferent sort orders 1.8 Database cracking and adaptive indexing 1.9 Efficient loading architectures 2 Column-store internals and advanced techniques 2.1 Vectorized Processing 向量化处理 2.2 Compression 2.3 Operating</description></item><item><title>The mapping of oid and relfilenode in PG</title><link>https://yangyingchao.github.io/posts/the-mapping-of-oid-and-relfilenode-in-pg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/the-mapping-of-oid-and-relfilenode-in-pg/</guid><description>1 Relfilenode of ordinary table 2 Relfilenode of Nail tables 3 Nail table Relfilenode storage mechanism 4 Summary 本文为摘录，原文为： https://www.highgo.ca/2021/01/12/the-mapping-of-oid-and-relfilenode-in-pg/ A table in PostgreSQL has a relfilenode value, which specifies the file name of the table on disk (except foreign table and partition table). In general, this value can be found in the relfilenode field of the pg_class table, but there</description></item><item><title>The Vertica Analytic Database- C-Store 7 Years Later</title><link>https://yangyingchao.github.io/posts/the-vertica-analytic-database-c-store-7-years-later-p1790_andrewlamb_vldb2012/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/the-vertica-analytic-database-c-store-7-years-later-p1790_andrewlamb_vldb2012/</guid><description>1 ABSTRACT 2 BACKGROUND 2.1 Design Overview 3 DATA MODEL 3.1 Projections 3.2 Join Indexes 3.3 Prejoin Projections 3.4 Encoding and Compression 3.5 Partitioning 3.6 Segmentation: Cluster Distribution 3.7 Read and Write Optimized Stores 4 TUPLE MOVER 5 QUERY EXECUTION 5.1 Query Operators and Plan Format 5.2 Query Optimization 本文为摘录，原文为： ../pdf/3/The Vertica Analytic Database- C-Store 7 Years Later (p1790_andrewlamb_vldb2012).pdf 1 ABSTRACT</description></item><item><title>Troubles with Nulls, Views from the Users</title><link>https://yangyingchao.github.io/posts/p2613-guagliardo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/p2613-guagliardo/</guid><description>1 INTRODUCTION 2 DESIGN AND METHODOLOGY 本文为摘录，原文为： ../pdf/6/p2613-guagliardo.pdf 1 INTRODUCTION NULL 用于表示不完整的数据 2 DESIGN AND METHODOLOGY</description></item><item><title>全方位对比 Postgres 和 MySQL</title><link>https://yangyingchao.github.io/posts/%E5%85%A8%E6%96%B9%E4%BD%8D%E5%AF%B9%E6%AF%94-postgres-%E5%92%8C-mysql.org/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/%E5%85%A8%E6%96%B9%E4%BD%8D%E5%AF%B9%E6%AF%94-postgres-%E5%92%8C-mysql.org/</guid><description>本文为摘录，原文为： https://mp.weixin.qq.com/s/xf7qb4oAVHyi4_U32FSKPA</description></item><item><title>人生是一个长板问题</title><link>https://yangyingchao.github.io/posts/weekly-issue-254/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/weekly-issue-254/</guid><description>本文为摘录，原文为： http://www.ruanyifeng.com/blog/2023/05/weekly-issue-254.html 大家可能听说过&amp;quot;水桶原理&amp;quot;：水桶的容量由最短的那块木板决定。 它的意思是，某些系统的关键，不在于发展</description></item><item><title>性能分析</title><link>https://yangyingchao.github.io/posts/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%9020230718/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yangyingchao.github.io/posts/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%9020230718/</guid><description>1 怎么看执行计划及执行过程 2 4、算子执行性能 3 5、exists、not exists、in、not in 3.1 exists 和 in 是等价的 3.2 2）not exists 与 not in 不等价</description></item></channel></rss>